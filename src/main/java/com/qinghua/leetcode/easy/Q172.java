package com.qinghua.leetcode.easy;

/**
 * 给定一个整数 n，返回 n! 结果尾数中零的数量。
 * <p>
 * 示例 1:
 * <p>
 * 输入: 3
 * 输出: 0
 * 解释: 3! = 6, 尾数中没有零。
 * 示例 2:
 * <p>
 * 输入: 5
 * 输出: 1
 * 解释: 5! = 120, 尾数中有 1 个零.
 * 说明: 你算法的时间复杂度应为 O(log n) 。
 */
public class Q172 {

    // 每隔5个数就会出现1个5，和2或者4相乘得到一个0，10可以分解为2*5
    // 每个25个数都会出现2个 5*5   2*5*5
    // 每个5*5*5 个数都会出现3个5  。。。。
    // 所以先用n/5 会出现多少次5， 再用次数/5 就是多出现2次5的情况，再/5就是出现3次5的情况
    // 把这些都加起来就是结果
    public int trailingZeroes(int n) {
        int res = 0;
        while (n > 5) {
            res += n / 5;
            n = n / 5;
        }
        return res;
    }
}
